
#!/bin/bash

cd $HOME
# Verificar o UUID do disco com blkid
UUID="C04AE47C4AE47098"
sudo umount -L arquivos
sudo mkdir /mnt/arquivos
sudo mount -L arquivos /mnt/arquivos


mkdir $HOME/.Templates
echo "
XDG_DESKTOP_DIR=\"$HOME/Desktop\"
XDG_DOWNLOAD_DIR=\"$HOME/Downloads\"
XDG_TEMPLATES_DIR=\"$HOME/.Templates\"
XDG_PUBLICSHARE_DIR=\"$HOME/Público\"
XDG_DOCUMENTS_DIR=\"$HOME/Documentos\"
XDG_MUSIC_DIR=\"$HOME/\"
XDG_PICTURES_DIR=\"$HOME/Imagens\"
XDG_VIDEOS_DIR=\"$HOME/Vídeos\"
" > $HOME/.config/user-dirs.dirs


#Cria link das pastas de usuário para o HD

rm -rf ~/Downloads/ ~/Modelos/ ~/Imagens/ ~/Público/ ~/Vídeos/ ~/Documentos/ ~/Música/
rm -rf ~/Modelos/ 
ln -sf /mnt/arquivos/ ~/Arquivos
mkdir ~/Arquivos/Documentos/ ~/Arquivos/Downloads/ ~/Arquivos/Imagens ~/Arquivos/Músicas/ ~/Arquivos/Público/ ~/Arquivos/Desenvolvimento/ ~/Arquivos/cursos ~/Arquivos/Vídeos/ ~/Arquivos/Desktop

ln -sf Arquivos/Documentos/ ~/Documentos
ln -sf Arquivos/Downloads/ ~/Downloads
ln -sf Arquivos/Imagens/ ~/Imagens
ln -sf Arquivos/Músicas/ ~/Músicas
ln -sf Arquivos/Público/ ~/Publico
ln -sf Arquivos/Desenvolvimento/ ~/Desenvolvimento
ln -sf Arquivos/Cursos ~/Cursos
ln -sf Arquivos/Vídeos/ ~/Videos
#
#Montagem do hdd na fstab
export UUID="C04AE47C4AE47098"
echo "LABEL=arquivos /mnt/arquivos ntfs defaults 0  2" | sudo tee -a /etc/fstab

#instalações que exigem interação
sudo apt install -y samba; \
sudo smbpasswd -a $(whoami)

# sudo vim /usr/share/X11/xkb/symbols/br
sudo sed -i "s/modifier_map Mod3   { Scroll_Lock };/# modifier_map Mod3   { Scroll_Lock };/g" /usr/share/X11/xkb/symbols/br

# dconf load / < dconf.bkp

#instalanção de pacotes
sudo apt install -y \
neofetch \
tree \
cmake \
clang \
dconf-editor \
wget \
curl \
git \
xclip \
linux-tools-$(uname -r) \
sqlite3 \
sqlitebrowser \
net-tools \
apt-transport-https \
ca-certificates \
build-essential \
libcurl4-openssl-dev \
libsqlite3-dev \
libnotify-dev \
pkg-config \
software-properties-common \
vlc \
libaio1 openvpn network-manager-openvpn \
gimp kdenlive \
libcanberra-gtk-module \
dconf-cli \
network-manager-openvpn-gnome \
python3-pip exuberant-ctags ack-grep neovim i3lock libpq-dev \
libpq-dev \
apt-file \
libsqlite3-dev libcurl4-openssl-dev \
libxext-dev \
gnome-shell-extensions gnome-shell-extension-dash-to-panel \
terminator;

sudo apt-get install -y ninja-build \
gettext libtool libtool-bin \
autoconf automake cmake g++ \
pkg-config unzip curl doxygen


# para instalar o onedrive
#sudo snap install dmd --classic;
#cd ~;
#git clone https://github.com/abraunegg/onedrive && \
#cd onedrive && \
#./configure && \
#sudo make clean install;

## Para instalar o dwm
# sudo apt install libx11-dev
#sudo apt install libxft-dev
#sudo apt install libxinerama-dev

cd ~/paranaues;
git config --global user.email "im.alexandre07@gmail.com";
git config --global user.name "Alexandre Castro";

# sudo snap install --classic heroku
sudo pip3 install pynvim flake8 pylint isort jedi ueberzug yapf


# nvim -c ":CocInstall coc-python | :q" 1>&2 > /dev/null &

#Docker
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && \
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" -y && \
sudo apt update -y && sudo apt upgrade -y && \
sudo apt install -y docker-ce docker-ce-cli containerd.io && \
sudo usermod -aG docker $(whoami)
#Docker-compose
sudo curl -L "https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
sudo chmod +x /usr/local/bin/docker-compose

# Esquema de cores do terminal
wget https://git.io/vQgMr 
chmod +x vQgMr
./vQgMr
rm vQgMr


# baixar o jdk 8, copiar para o /opt e descompactar para /opt/java


#Compartilhamento SAMBA
echo "
[notebook]
   path = /home/alexandre/Público
   browseable = yes
   read only = no
   guest ok = no
" | sudo tee -a /etc/samba/smb.conf;

sudo /etc/init.d/smbd restart;
sudo /etc/init.d/samba-ad-dc restart

#~/Arquivos/utilidades/instala_so/programas/tearing_fix.sh

# instalar os pacotes baixados
sudo apt install /mnt/arquivos/utilidades/instala_so/programas/epson-inkjet-printer-escpr_1.6.40-1lsb3.2_amd64.deb \
sudo cp ~/Downloads/instantclient-basic-linux.x64-12.2.0.1.0.zip /opt; \
cd /opt; \
sudo unzip instantclient-basic-linux.x64-12.2.0.1.0.zip; \
cd /opt/instantclient_12_2; \
sudo ln -sf libclntsh.so.12.1 libclntsh.so; \
sudo cp libclntsh.so libclntsh.so.1
sudo apt update -y && sudo apt upgrade -y

pip install install pynvim flake8 pylint isort jedi yapf ranger-fm
